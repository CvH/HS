From 3a99c6fe63bb61bc56664a25ca67b737135bfd28 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sat, 14 Apr 2018 11:35:26 +0300
Subject: [PATCH 1/2] oled

---
 OLED.cpp | 36 ++++++++++++++++++++++++++++++++++--
 1 file changed, 34 insertions(+), 2 deletions(-)

diff --git a/OLED.cpp b/OLED.cpp
index a46970d..372116c 100644
--- a/OLED.cpp
+++ b/OLED.cpp
@@ -22,6 +22,10 @@
 static bool networkInfoInitialized = false;
 static unsigned char passCounter = 0;
 
+static std::string lh2 = "";
+static std::string lh3 = "";
+static std::string lh4 = "";
+
 //Logo MMDVM for Idle Screen
 static unsigned char logo_glcd_bmp[] =
 {
@@ -240,8 +244,6 @@ void COLED::setIdleInt()
 //    m_display.print("Idle");
 
 //    m_display.setTextSize(1);
-    m_display.startscrolldiagright(0x00,0x0f);  //the MMDVM logo scrolls the whole screen
-    m_display.display();
 
     unsigned char info[100U];
     CNetworkInfo* m_network;
@@ -264,6 +266,24 @@ void COLED::setIdleInt()
         networkInfoInitialized = true;
         passCounter = 0;
     }
+
+    m_display.fillRect(0, OLED_LINE2, m_display.width(), 40, BLACK);
+    m_display.setCursor(0, OLED_LINE2);
+    m_display.printf("%s", lh2.c_str());
+
+    m_display.fillRect(0, OLED_LINE3, m_display.width(), 40, BLACK);
+    m_display.setCursor(0, OLED_LINE3);
+    m_display.printf("%s", lh3.c_str());
+
+    m_display.fillRect(0, OLED_LINE4, m_display.width(), 40, BLACK);
+    m_display.setCursor(0, OLED_LINE4);
+    m_display.printf("%s", lh4.c_str());
+
+    m_display.fillRect(0, OLED_LINE6, m_display.width(), 40, BLACK);
+    m_display.setCursor(0, OLED_LINE6);
+    m_display.printf("%s", m_ipaddress.c_str());
+
+    m_display.display();
 }
 
 void COLED::setErrorInt(const char* text)
@@ -390,6 +410,13 @@ void COLED::writeDMRInt(unsigned int slotNo,const std::string& src,bool group,co
     m_display.setCursor(0,OLED_LINE6);
     m_display.printf("%s",m_ipaddress.c_str());
 
+    lh4 = lh3;
+    lh3 = lh2;
+    if (group)
+      lh2 = "D " + src + " > TG" + dst;
+    else
+      lh2 = "D " + src + " > " + dst;
+
     OLED_statusbar();
     m_display.display();
 
@@ -444,6 +471,11 @@ void COLED::writeFusionInt(const char* source, const char* dest, const char* typ
 
     if (m_modem != NULL)
         m_modem->writeYSFInfo(source, dest, type, origin);
+    m_display.display();
+
+    lh4 = lh3;
+    lh3 = lh2;
+    lh2 = "F " + std::string(source) + " > " + std::string(dest);
 }
 
 void COLED::clearFusionInt()
-- 
2.19.2


From ed1994d52891acdc6553a763de7e588a9bf9f2df Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sat, 12 Jan 2019 19:11:11 +0200
Subject: [PATCH 2/2] add cmake buildsystem

---
 CMakeLists.txt               | 51 ++++++++++++++++++++++++++++++++++++
 cmake/FindArduiPi_OLED.cmake |  5 ++++
 cmake/FindI2c.cmake          |  4 +++
 3 files changed, 60 insertions(+)
 create mode 100644 CMakeLists.txt
 create mode 100644 cmake/FindArduiPi_OLED.cmake
 create mode 100644 cmake/FindI2c.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..a31c13e
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,51 @@
+cmake_minimum_required(VERSION 2.6)
+
+set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
+
+set(APP_NAME "MMDVMHost")
+project(${APP_NAME})
+
+option(ENABLE_OLED "Enable OLED support" OFF)
+option(ENABLE_ADAFRUIT "Enable Adafruit RGB LCD Shield support" OFF)
+
+if(GIT_VERSION)
+  set(GIT_HASH ${GIT_VERSION})
+else()
+  set(GIT_HASH "0000000000")
+endif()
+file(WRITE ${CMAKE_SOURCE_DIR}/GitVersion.h "const char *gitversion = \"${GIT_HASH}\";")
+
+file(GLOB SOURCES "*.cpp")
+file(GLOB HEADERS "*.h")
+
+SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Os -Wall -std=c++0x $ENV{CXXFLAGS}")
+set(DEPLIBS "")
+
+find_package(Threads REQUIRED QUIET)
+list(APPEND DEPLIBS ${CMAKE_THREAD_LIBS_INIT})
+
+if(ENABLE_OLED)
+  find_package(ArduiPi_OLED REQUIRED)
+  include_directories(${ARDUIPI_OLED_INCLUDE_DIRS})
+  list(APPEND DEPLIBS ${ARDUIPI_OLED_LIBRARIES})
+
+  find_package(I2c REQUIRED)
+  include_directories(${I2C_INCLUDE_DIRS})
+  list(APPEND DEPLIBS ${I2C_LIBRARIES})
+
+  add_definitions(-DOLED)
+else()
+  list(REMOVE_ITEM SOURCES ${CMAKE_SOURCE_DIR}/OLED.cpp)
+  list(REMOVE_ITEM HEADERS ${CMAKE_SOURCE_DIR}/OLED.h)
+endif()
+
+# meh.
+list(REMOVE_ITEM SOURCES ${CMAKE_SOURCE_DIR}/HD44780.cpp)
+list(REMOVE_ITEM HEADERS ${CMAKE_SOURCE_DIR}/HD44780.h)
+
+# more meh
+list(REMOVE_ITEM SOURCES ${CMAKE_SOURCE_DIR}/RemoteCommand.cpp)
+list(REMOVE_ITEM HEADERS ${CMAKE_SOURCE_DIR}/RemoteCommand.h)
+
+add_executable(${APP_NAME} ${SOURCES} ${HEADERS})
+target_link_libraries(${APP_NAME} ${DEPLIBS})
diff --git a/cmake/FindArduiPi_OLED.cmake b/cmake/FindArduiPi_OLED.cmake
new file mode 100644
index 0000000..ee31a31
--- /dev/null
+++ b/cmake/FindArduiPi_OLED.cmake
@@ -0,0 +1,5 @@
+find_library(ARDUIPI_OLED_LIBRARIES ArduiPi_OLED)
+find_path(ARDUIPI_OLED_INCLUDE_DIRS NAMES ArduiPi_OLED.h ArduiPi_OLED_lib.h)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(ArduiPi_OLED DEFAULT_MSG ARDUIPI_OLED_LIBRARIES ARDUIPI_OLED_INCLUDE_DIRS)
diff --git a/cmake/FindI2c.cmake b/cmake/FindI2c.cmake
new file mode 100644
index 0000000..dafe15e
--- /dev/null
+++ b/cmake/FindI2c.cmake
@@ -0,0 +1,4 @@
+find_library(I2C_LIBRARIES i2c)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(I2C DEFAULT_MSG I2C_LIBRARIES)
-- 
2.19.2

